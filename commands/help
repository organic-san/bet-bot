const { SlashCommandBuilder } = require('@discordjs/builders');
const Discord = require('discord.js');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('help')
		.setDescription('幫助清單')
        .addStringOption(opt => 
            opt.setName('option')
            .setDescription('要查詢的指令種類')
            .setRequired(true)
            .addChoice("基本說明(指令一覽與功能說明)", "basic")
            .addChoice("賭盤設置相關", "bet")
            .addChoice("下注方法與其意義", "down")
        ),
	tag: "interaction",
    /**
     * 
     * @param {Discord.CommandInteraction} interaction 
     */
	async execute(interaction) {

        const option = interaction.options.getString('option');

        if (option === 'basic') {
            const embed = new Discord.MessageEmbed()
                .setColor(process.env.EMBEDCOLOR)
                .setTitle(`指令幫助清單/basic(基本說明)`)
                .setDescription(`關於${interaction.client.user.tag}的基本功能`)
                .addField(`基本指令`,
                    "\`/account birthday [user:用戶]\` - 找尋用戶創建帳號的日子\n" + 
                    "\`/account avatar [user:用戶] [size:尺寸]\` - 產生用戶頭像的網址\n" + 
                    "\`/information bot\` - 查詢我的資料\n" + 
                    "\`/information guild\` - 查詢伺服器的資料\n" + 
                    "\`/information user <user:用戶>\` - 查詢該用戶的資料\n" + 
                    "\`/poll create <title:標題> [description:內文] [option:選項]\` - 建立投票\n" + 
                    "\`/poll sum <message-id:訊息ID>\` - 截計投票結果\n" + 
                    "\`/anonymous <message:訊息>\` - 匿名發送訊息\n" + 
                    "\`/record <message-id:訊息ID> [channel:頻道]\` - 回顧一則訊息\n" + 
                    `\`/timer [hour:小時] [min:分鐘] [sec:秒] [message:提醒訊息]\` - 計時器\n` +
                    "\`/happy-birthday <user:用戶>\` - 發送生日快樂訊息給該用戶\n" + 
                    `\`/generator fat-nerd-style <text:內文>\` - 肥宅文體產生器!\n` +
                    `\`/generator order-doesnt-matter <text:內文>\` - 文字序順不響影讀閱產器生!\n`)
                .addField(`其他系統性的指令`, 
                    "以下指令的詳細說明，可以在/help後選擇其他模式以取得說明\n\n" + 
                    "\`/levels\` - 等級排行系統\n" + 
                    "\`/auto-reply\` - 自動回應系統\n" + 
                    "\`/welcome-message\` - 歡迎訊息/送別訊息系統\n" + 
                    "\`/music\` - 音樂系統\n" + 
                    "\`/game\` - 遊戲相關功能" +
                    "\`/response\` - 機器人回應\n" + 
                    "\`/words\` - 每日單字系統")
                .addField("表情符號轉換功能", 
                    "如果想要在訊息中加入動畫/別群的表情符號，但是卻沒有Discord-Nitro，\n" + 
                    "只要輸入表情符號的名稱，機器人就會將你的發言自動轉換成包含表情符號的訊息!\n" + 
                    "例如: 只要輸入 \`:acidbot:\`，就會自動將訊息轉換轉換成 <:acidbot:896709436163375114>")
                .addField("內建關鍵字反應功能", 
                    "部分關鍵字機器人也會反應\n分別為: \`笑死\`、\`快樂光線\`、\`龜雞奶\`")
                .addField(`加入有機酸伺服器`,`如果有任何問題或需求，麻煩請[點擊加入伺服器](https://discord.gg/hveXGk5Qmz)並聯絡organic_san_2#0500\n`)
                .setFooter(`${interaction.client.user.tag}`,`${interaction.client.user.displayAvatarURL({dynamic: true})}`)
            interaction.reply({embeds: [embed]});

        } else if (option === 'update') {
            const embed = new Discord.MessageEmbed()
                .setColor(process.env.EMBEDCOLOR)
                .setTitle(`指令幫助清單/update(最近更新)`)
                .setDescription(`來看看有機酸又加了什麼東西!`)
                .addField("新增肥宅文體產生器!", 
                    "\`/generator fat-nerd-style <text:內文>\`\n" + 
                    "將自動轉換您輸入的言論，並轉譯成肥宅體\n" + 
                    "是非常方便的功能。(燦笑")
                .addField("計時器回來了!", 
                    "\`/timer [hour:小時] [min:分鐘] [sec:秒] [message:提醒訊息]\`\n")
                .addField("歡迎訊息回來了!", 
                    "\`/welcome-message\` 或者查看/help welcome-message以取得完整資訊\n")
                .addField("圈圈叉叉!", 
                    "\`/tic-tac-toe\`\n")
                .addField("猜數字!", 
                    "\`/guess-number\`\n")
                .addField("新的轉換器", 
                    "/generator那附近找一下應該就有了(茶\n")
                .addField("剔除非斜線的指令",
                    "將於近期之內無法再使用原先的指令，大部分都已轉換完畢，請注意。")
                .addField(`加入有機酸伺服器`,`如果有任何問題或需求，麻煩請[點擊加入伺服器](https://discord.gg/hveXGk5Qmz)並聯絡organic_san_2#0500\n`)
                .setFooter(`${interaction.client.user.tag}`,`${interaction.client.user.displayAvatarURL({dynamic: true})}`)
            interaction.reply({embeds: [embed]});
            
        } else if (option === 'auto-reply') {
            const embed = new Discord.MessageEmbed()
                .setColor(process.env.EMBEDCOLOR)
                .setTitle(`指令幫助清單/auto-reply(自動回應系統)`)
                .setDescription(`關於自動回應系統: 可以讓機器人自動與成員互動。\n` +
                    `如果將自動回應的文自設定為 \`快樂光線\` :\n` +
                    `那麼，當用戶輸入 \`快樂光線\` 時，\n` +
                    `機器人將自動回應 \`(/  ≧▽≦)/==============))\`\n` +
                    `<此為必填項> [此為選填項]`)
                .addField(`基本指令`, 
                    `\`/auto-reply show\` - 顯示機器人會自動回應的文字清單語查詢ID`)
                .addField("需要伺服器管理權限的指令", 
                    "\`/auto-reply add <trigger-message:文字> <reply-message:文字> <mode:模式>\` - 新增自動回應的項目\n" + 
                    "\`/auto-reply remove <auto-reply-id:數字>\` - 刪除特定回應的項目\n" + 
                    "\`/auto-reply reset\` - 清空所有回應項目")
                .addField(`加入有機酸伺服器`,`如果有任何問題或需求，麻煩請[點擊加入伺服器](https://discord.gg/hveXGk5Qmz)並聯絡organic_san_2#0500\n`)
                .setFooter(`${interaction.client.user.tag}`,`${interaction.client.user.displayAvatarURL({dynamic: true})}`)
            interaction.reply({embeds: [embed]});

        }
    }
};